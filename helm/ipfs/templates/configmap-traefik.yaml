{{- if .Values.apiProxy.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ipfs.fullname" . }}-traefik
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ipfs.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-proxy
data:
  traefik.yaml: |-
    global:
      sendAnonymousUsage: false
    providers:
      file:
        directory: /etc/traefik/
        watch: true
    entryPoints:
      web:
        address: ":6001"
        {{- if .Values.apiProxy.auth }}
        http:
          middlewares:
            - basic-auth
        {{- end}}
      {{- if .Values.metrics.enabled }}
      metrics:
        address: :6002
      {{- end }}
    log:
      level: INFO
    {{- if .Values.metrics.enabled }}
    metrics:
      prometheus:
        entryPoint: metrics
        addRoutersLabels: true
    {{- end }}
{{- if .Values.apiProxy.auth }}
  auth.yaml: |-
    http:
      middlewares:
        basic-auth:
          basicAuth:
            users:
              {{- range $k, $v := .Values.apiProxy.users }}
              - {{ htpasswd $k $v | quote }}
              {{- end }}
{{- end }}
  api.yaml: |-
    http:
      routers:
        {{- if .Values.apiProxy.explicitEndpoints }}
        {{- range $endpoint := .Values.apiProxy.endpoints }}
        {{ $endpoint }}:
          rule: 'PathPrefix(`{{ $endpoint }}`)'
          service: "ipfs"
        {{- end }}
        {{- else }}
        api:
          rule: 'PathPrefix(`/api`)'
          service: "ipfs"
        {{- end }}
      services:
        ipfs:
          loadBalancer:
            servers:
              {{- if .Values.cluster.enabled }}
              - url: "http://{{ include "ipfs.fullname" . }}-cluster:9095"
              {{- else }}
              - url: "http://{{ include "ipfs.fullname" . }}-peer:5001"
              {{- end }}
{{- end }}
