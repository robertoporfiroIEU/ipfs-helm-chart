
---
# IPFS Cluster StatefulSet
{{- if .Values.cluster.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ipfs.fullname" . }}-cluster
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ipfs.labels" . | nindent 4 }}
    app.kubernetes.io/component: ipfs-cluster
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ include "ipfs.fullname" . }}-cluster
  selector:
    matchLabels:
      {{- include "ipfs.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ipfs-cluster
  template:
    metadata:
      labels:
        {{- include "ipfs.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ipfs-cluster
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "ipfs.serviceAccountName" . }}
      containers:
        - name: ipfs-cluster
          image: "{{ .Values.cluster.image.repository }}:{{ .Values.cluster.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS
              value: /ip4/0.0.0.0/tcp/9094
            - name: CLUSTER_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "ipfs.fullname" . }}
                  key: cluster-secret
            {{- if .Values.cluster.restApiCredentials }}
            - name: CLUSTER_RESTAPI_BASICAUTHCREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: {{ include "ipfs.fullname" . }}
                  key: restapi-credentials
            {{- end }}
            {{- range $sectionName, $sectionContent := .Values.cluster.configuration }}
            {{- range $k, $v := $sectionContent }}
            - name: CLUSTER_{{ $sectionName | upper }}_{{ regexReplaceAll "_" $k "" | upper }}
              value: {{ $v | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: cluster-api
              containerPort: 9094
              protocol: TCP
            - name: cluster-proxy
              containerPort: 9095
              protocol: TCP
            - name: cluster-swarm
              containerPort: 9096
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: cluster-metrics
              containerPort: 8888
              protocol: TCP
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: cluster-swarm
          readinessProbe:
            tcpSocket:
              port: cluster-swarm
          volumeMounts:
            - name: cluster-storage
              mountPath: /data/ipfs-cluster
            - name: start-ipfs-cluster
              mountPath: /usr/local/bin/entrypoint.sh
              subPath: start_ipfs_cluster
          resources:
            {{- toYaml .Values.cluster.resources | nindent 12 }}
      volumes:
        - name: start-ipfs-cluster
          configMap:
            name: {{ include "ipfs.fullname" . }}-cluster
            items:
              - key: start_ipfs_cluster
                path: start_ipfs_cluster
                mode: 0555
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: cluster-storage
      spec:
        accessModes:
          {{- .Values.cluster.persistence.accessModes | toYaml | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.cluster.persistence.size | quote }}
        {{- if .Values.cluster.persistence.storageClass }}
        storageClassName: {{ .Values.cluster.persistence.storageClass }}
        {{- end }}
{{- end }}
